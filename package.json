{
  "name": "vscode-barreler",
  "displayName": "Barreler",
  "description": "One click generator for barrel (index export) files for JavaScript and TypeScript.",
  "version": "0.0.3",
  "publisher": "shinruchan",
  "repository": {
    "url": "https://github.com/Shinruchan/vscode-barreler.git"
  },
  "icon": "barrel.png",
  "engines": {
    "vscode": "^1.36.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "workspaceContains:**/*.js",
    "workspaceContains:**/*.jsx",
    "workspaceContains:**/*.ts",
    "workspaceContains:**/*.tsx"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "barreler.generateBarrels",
        "title": "Barreler: Generate Barrels"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "barreler.generateBarrels",
          "when": "false"
        }
      ],
      "explorer/context": [
        {
          "when": "explorerResourceIsFolder",
          "command": "barreler.generateBarrels",
          "group": "2_workspace"
        },
        {
          "when": "resourceExtname == .tsx",
          "command": "barreler.generateBarrels",
          "group": "2_workspace"
        },
        {
          "when": "resourceExtname == .ts",
          "command": "barreler.generateBarrels",
          "group": "2_workspace"
        },
        {
          "when": "resourceExtname == .jsx",
          "command": "barreler.generateBarrels",
          "group": "2_workspace"
        },
        {
          "when": "resourceExtname == .js",
          "command": "barreler.generateBarrels",
          "group": "2_workspace"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Barreler",
      "properties": {
        "barreler.mode": {
          "type": "string",
          "default": null,
          "enum": [
            "multifile-index",
            "all-level-index"
          ],
          "markdownEnumDescription": [
            "Generates index file on lever where there is more than 1 file to export from.",
            "Generates index file on file level and exports file exports into this index."
          ],
          "markdownDescription": "Index creation mode."
        },
        "barreler.extensions": {
          "type": "string",
          "default": "none",
          "enum": [
            "none",
            "same-as-file",
            "custom"
          ],
          "markdownEnumDescriptions": [
            "no added extensions, if file ./file.ts, generates: export {} from './file'",
            "same extension as file, if file ./file.ts, generates: export {} from './file.ts'",
            "uses custom-extension as extension, if file ./file.ts and custom-extension is 'mjs', generates: export {} from './file.mjs"
          ],
          "markdownDescription": "Export from file extension mode"
        },
        "barreler.custom-extension": {
          "type": "string",
          "default": "",
          "markdownDescription": "Custom extension when extensions='custom', example: 'js' or 'mjs' or ..."
        },
        "barreler.include": {
          "type": "array",
          "default": null,
          "markdownDescription": "Files to include."
        },
        "barreler.exclude": {
          "type": "array",
          "default": null,
          "markdownDescription": "Files to exclude."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./"
  },
  "devDependencies": {
    "@types/node": "^22.1.0",
    "@types/vscode": "^1.36.0",
    "glob": "^11.0.0",
    "typescript": "^5.5.4",
    "tslint": "^6.1.3",
    "vscode-test": "^1.6.1"
  },
  "dependencies": {
    "barreler": "0.0.9"
  }
}
